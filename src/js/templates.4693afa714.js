const positions=["ðŸ¥‡","ðŸ¥ˆ","ðŸ¥‰"],healthy={FCP:t=>t<=1.8?"fast":t>=3?"fail":"average",LCP:t=>t<=2.5?"fast":t>=4?"fail":"average",FID:t=>t<=100?"fast":t>=300?"fail":"average",INP:t=>t<=200?"fast":t>=500?"fail":"average",CLS:t=>t<=.1?"fast":t>=.25?"fail":"average"};function getSiteInfo(t){const{host:e}=new URL(t);return`\n<img class="logo" width="32" height="32" src="https://icons.duckduckgo.com/ip2/${e}.ico" alt="${t}"/>\n<div class="site">\n<strong>${e.split(".")[1].toUpperCase()}</strong>\n<a href="${t}" class="url" target="_blank" rel="noopener noreferrer" title="${t}">${t}</a>\n</div>\n  `}export function resultTemplate(t,e){const n=t.origin||t.url;if(null===t.metrics)return noDataTemplate(n,t.error);const a=t.metrics.FCP&&(t.metrics.FCP.value/1e3).toFixed(2)||"-",s=t.metrics.LCP&&(t.metrics.LCP.value/1e3).toFixed(2)||"-",r=t.metrics.FID&&t.metrics.FID.value||"-",i=t.metrics.CLS&&t.metrics.CLS.value||"-",d=t.metrics.INP&&t.metrics.INP.value||"-";return`\n<tr tabindex="0">\n<td class="ranking rank-${e}" tabindex="0">${positions[e-1]||e}</td>\n<td tabindex="0">${getSiteInfo(n)}</td>\n<td class="${healthy.FCP(a)}" tabindex="0">${a}s</td>\n<td class="${healthy.LCP(s)}" tabindex="0">${s}s</td>\n<td class="${healthy.FID(r)}" tabindex="0">${r}ms</td>\n<td class="${healthy.CLS(i)}" tabindex="0">${i}</td>\n<td class="${healthy.INP(d)}" tabindex="0">${d}</td>\n</tr>\n`}export function skeletonTemplate(t){return`\n<tr>\n<td class="ranking">-</td>\n<td>${getSiteInfo(t)}</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n`}export function noDataTemplate(t,e){return`\n<tr>\n<td class="ranking">-</td>\n<td>${getSiteInfo(t)}</td>\n<td class="data-not-found" colspan="4">${e}</td>\n</tr>\n`}